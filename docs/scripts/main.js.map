{"version":3,"file":"main.js","mappings":"mBAAA,MAAMA,EAAmBC,SAASC,iBAAiB,wBAE7CC,EAAcF,SAASG,cAAc,eACrCC,EAAOJ,SAASG,cAAc,iBAC9BE,EAAiBL,SAASG,cAAc,kBAExCG,EAAmBN,SAASG,cAAc,qBAC1CI,EAAgBP,SAASG,cAAc,sBAEvCK,EAAcR,SAASG,cAAc,yBACrCM,EAAoBT,SAASG,cAAc,mBAEjD,SAAwBO,EAAiBN,GACvC,MAAMO,EAAoBX,SAASC,iBAAiB,8BAE9CW,EAAmBZ,SAASG,cAAc,qBAE1CU,EAAab,SAASG,cAAc,sBAEpCW,EAAYd,SAASG,cAAc,uBAEzCQ,EAAkBI,SAAQC,IACxBA,EAAKC,iBAAiB,SAAS,KAC7BJ,EAAWK,UAAUC,OAAO,kBAC5BP,EAAiBM,UAAUE,OAAO,QAElCP,EAAWK,UAAUE,OAAO,QAC5BP,EAAWK,UAAUG,IAAI,iBAAgB,GAC1C,IAGHP,EAAUG,iBAAiB,SAAS,KAClCJ,EAAWK,UAAUG,IAAI,wBACzBC,YAAW,KACTV,EAAiBM,UAAUE,OAAO,QAElCP,EAAWK,UAAUE,OAAO,QAC5BP,EAAWK,UAAUC,OAAO,uBAAsB,GACjD,IAAG,GAEV,CAGAI,GAEArB,EAAYe,iBAAiB,SAAS,KACpCb,EAAKc,UAAUC,OAAO,mBACtBf,EAAKc,UAAUE,OAAO,SAAQ,IAGhCf,EAAeY,iBAAiB,SAAS,KACvCb,EAAKc,UAAUG,IAAI,mBACnBC,YAAW,KACTlB,EAAKc,UAAUE,OAAO,SAAQ,GAC7B,IAAG,IAGRrB,EAAiBgB,SAAQC,IACvBA,EAAKC,iBAAiB,SAAS,KACzBD,EAAKQ,aAAa,SACpBR,EAAKS,aAAa,MAAO,0BACzBT,EAAKU,gBAAgB,UAErBV,EAAKS,aAAa,MAAO,2BACzBT,EAAKS,aAAa,OAAQ,KAE5BT,EAAKW,WAAWT,UAAUE,OAAO,UAEjC,MAAMQ,EAAeZ,EAAKW,WAAWA,WACrCC,EAAaV,UAAUE,OAAO,UAE9B,MAAMS,EAAeD,EAAazB,cAAc,8BAChD0B,EAAaX,UAAUE,OAAO,UAC9BU,QAAQC,IAAIF,EAAY,GACzB,IAGHC,QAAQC,IAAIvB,GAEZA,EAAYS,iBAAiB,UAAU,KACX,UAAtBT,EAAYwB,OACdvB,EAAkBS,UAAUC,OAAO,QAEnCb,EAAiBY,UAAUG,IAAI,QAC/Bd,EAAcW,UAAUG,IAAI,SACG,SAAtBb,EAAYwB,QACrBvB,EAAkBS,UAAUG,IAAI,QAEhCf,EAAiBY,UAAUC,OAAO,QACpC,G","sources":["webpack://gulpit/./src/scripts/popUp.js"],"sourcesContent":["const accrodionButtons = document.querySelectorAll('.pop-up__answer_plus')\r\n\r\nconst menuTrigger = document.querySelector('#chatCircle')\r\nconst menu = document.querySelector('.pop-up-block')\r\nconst crossCloseIcon = document.querySelector('.pop-up__cross')\r\n\r\nconst questionsWrapper = document.querySelector('.pop-up__question')\r\nconst answerWrapper = document.querySelector('.pop-up__answer-wr')\r\n\r\nconst searchInput = document.querySelector('.pop-up__search_input')\r\nconst failedSearchPopUp = document.querySelector('.pop-up__empty')\r\n\r\nfunction addAnswerMenu (parentTriggerId, menu) {\r\n  const answerMenuTrigger = document.querySelectorAll(`${parentTriggerId} > *`)\r\n\r\n  const quesitonsWrapper = document.querySelector('.pop-up__question')\r\n\r\n  const menuToShow = document.querySelector(`${menu}`)\r\n\r\n  const returnBtn = document.querySelector('.pop-up__answer_img')\r\n\r\n  answerMenuTrigger.forEach(item => {\r\n    item.addEventListener('click', () => {\r\n      menuToShow.classList.remove('open-animation')\r\n      quesitonsWrapper.classList.toggle('none')\r\n\r\n      menuToShow.classList.toggle('none')\r\n      menuToShow.classList.add('open-animation')\r\n    })\r\n  })\r\n\r\n  returnBtn.addEventListener('click', () => {\r\n    menuToShow.classList.add('close-animation-fast')\r\n    setTimeout(() => {\r\n      quesitonsWrapper.classList.toggle('none')\r\n\r\n      menuToShow.classList.toggle('none')\r\n      menuToShow.classList.remove('close-animation-fast')\r\n    }, 301)\r\n  })\r\n}\r\n// функция для добавления новых меню,первый параметр - родитель елементов,на которые будет вешаться обработчик клика,\r\n// Второй параметр - меню,которое должно быть показано,\r\naddAnswerMenu('#pop-up__main-question', '.pop-up__answer-wr')\r\n\r\nmenuTrigger.addEventListener('click', () => {\r\n  menu.classList.remove('close-animation')\r\n  menu.classList.toggle('active')\r\n})\r\n\r\ncrossCloseIcon.addEventListener('click', () => {\r\n  menu.classList.add('close-animation')\r\n  setTimeout(() => {\r\n    menu.classList.toggle('active')\r\n  }, 701)\r\n})\r\n\r\naccrodionButtons.forEach(item => {\r\n  item.addEventListener('click', () => {\r\n    if (item.hasAttribute('Data')) {\r\n      item.setAttribute('src', 'img/PopUp/plusIcon.svg')\r\n      item.removeAttribute('Data')\r\n    } else {\r\n      item.setAttribute('src', 'img/PopUp/minusIcon.svg')\r\n      item.setAttribute('Data', '')\r\n    }\r\n    item.parentNode.classList.toggle('active')\r\n\r\n    const concreteMain = item.parentNode.parentNode\r\n    concreteMain.classList.toggle('active')\r\n\r\n    const textToToggle = concreteMain.querySelector('.pop-up__answer__text_text')\r\n    textToToggle.classList.toggle('active')\r\n    console.log(textToToggle)\r\n  })\r\n})\r\n\r\nconsole.log(searchInput)\r\n\r\nsearchInput.addEventListener('change', () => {\r\n  if (searchInput.value === 'false') {\r\n    failedSearchPopUp.classList.remove('none')\r\n\r\n    questionsWrapper.classList.add('none')\r\n    answerWrapper.classList.add('none')\r\n  } else if (searchInput.value === 'true') {\r\n    failedSearchPopUp.classList.add('none')\r\n\r\n    questionsWrapper.classList.remove('none')\r\n  }\r\n})\r\n"],"names":["accrodionButtons","document","querySelectorAll","menuTrigger","querySelector","menu","crossCloseIcon","questionsWrapper","answerWrapper","searchInput","failedSearchPopUp","parentTriggerId","answerMenuTrigger","quesitonsWrapper","menuToShow","returnBtn","forEach","item","addEventListener","classList","remove","toggle","add","setTimeout","addAnswerMenu","hasAttribute","setAttribute","removeAttribute","parentNode","concreteMain","textToToggle","console","log","value"],"sourceRoot":""}